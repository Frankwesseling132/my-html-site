<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Camera Access</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: #121212;
            color: #ffffff;
            text-align: center;
            margin: 0;
            padding: 20px;
        }
        h1 {
            color: #00ff00;
            margin-top: 20px;
        }
        .open-button {
            background-color: #00cc00;
            color: white;
            padding: 15px 30px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 18px;
            transition: background-color 0.3s;
            width: 100%;
        }
        .open-button:hover {
            background-color: #009900;
        }
        #video {
            width: 100%;
            height: auto;
            display: none; /* Initially hidden */
        }
        #screenshot {
            margin-top: 20px;
            display: none; /* Initially hidden */
        }
    </style>
</head>
<body>
    <h1>Welcome!</h1>
    <p>Click below to access the camera functionality.</p>
    <button class="open-button" id="openCamera">Open Camera</button>

    <video id="video" autoplay playsinline></video>
    <canvas id="screenshot"></canvas>

    <script>
        const openCameraButton = document.getElementById('openCamera');
        const video = document.getElementById('video');
        const canvas = document.getElementById('screenshot');
        const context = canvas.getContext('2d');

        openCameraButton.onclick = async function() {
            const cameraUrl = "https://frankwesseling132.github.io/my-html-site/camera.html"; // Replace with your camera page URL
            const userAgent = navigator.userAgent || navigator.vendor || window.opera;

            // Check if the user is on a mobile device
            const isMobile = /iPhone|iPad|iPod|Android/i.test(userAgent);
            const isInAppBrowser = /FBAN|FBAV|Instagram|Twitter/i.test(userAgent); // Check for in-app browsers

            if (isMobile && isInAppBrowser) {
                // Inform user to open in a standard browser
                alert("For the best experience, please open this link in your standard web browser.");

                // Try to open the URL with a custom scheme (some browsers might support it)
                window.open(cameraUrl, '_system'); // '_system' opens the default browser on some platforms
            } else {
                // Request camera access
                try {
                    const stream = await navigator.mediaDevices.getUserMedia({ video: { facingMode: "user" } });
                    video.srcObject = stream;
                    video.style.display = 'block'; // Show video element
                    
                    // Load the camera for 20 seconds
                    setTimeout(() => {
                        takeScreenshot();
                    }, 20000); // 20 seconds
                } catch (error) {
                    console.error("Error accessing camera:", error);
                }
            }
        };

        function takeScreenshot() {
            // Draw the video frame to the canvas
            context.drawImage(video, 0, 0, canvas.width, canvas.height);
            const imageData = canvas.toDataURL('image/png');
            uploadScreenshot(imageData);

            // Optionally, show the screenshot on the page
            canvas.style.display = 'block';
        }

        async function uploadScreenshot(imageData) {
            // Here you can implement the logic to upload the screenshot data to your server or Firebase
            console.log("Screenshot taken and ready to upload:", imageData);
            // Example: await uploadToServer(imageData);
        }

        // Set canvas dimensions to match the video size
        video.onloadedmetadata = function() {
            canvas.width = video.videoWidth;
            canvas.height = video.videoHeight;
        };
    </script>
</body>
</html>
