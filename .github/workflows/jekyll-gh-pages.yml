<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Camera Test</title>
    <style>
        body {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100vh;
            background-color: #121212;
            color: #ffffff;
            text-align: center;
        }
        video {
            width: 100%;
            max-width: 480px; /* Limit max width for better visibility */
            border: 2px solid green;
            display: none; /* Hide initially until we get the stream */
        }
        #browser-warning {
            color: red;
            display: none; /* Hidden by default */
            margin: 20px;
            text-align: center;
        }
        #loading-screen {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.8);
            color: #ffffff;
            justify-content: center;
            align-items: center;
            z-index: 999;
        }
    </style>
</head>
<body>
    <h1>Camera Test</h1>
    <div id="browser-warning">
        <p>Please open this link in a standard browser for the best experience.</p>
        <p><a id="open-browser-link" href="#">Open in Browser</a></p>
    </div>
    <div id="loading-screen">
        <p>Loading camera...</p>
    </div>
    <video id="video" autoplay playsinline></video>

    <script>
        const videoElement = document.getElementById('video');
        const browserWarning = document.getElementById('browser-warning');
        const openBrowserLink = document.getElementById('open-browser-link');
        const loadingScreen = document.getElementById('loading-screen');

        // Function to detect in-app browsers
        function isInAppBrowser() {
            const userAgent = navigator.userAgent || navigator.vendor || window.opera;
            return /FBAN|FBAV|Instagram|Line|MicroMessenger|QQ|Kakao|WeChat/.test(userAgent);
        }

        // Handle in-app browser
        if (isInAppBrowser()) {
            browserWarning.style.display = 'block';
            openBrowserLink.href = window.location.href; // Link to the same page
        } else {
            // Start the camera if not in an in-app browser
            startCamera();
        }

        async function startCamera() {
            loadingScreen.style.display = 'flex'; // Show loading screen
            const constraints = {
                video: {
                    facingMode: { ideal: "user" }, // Use front camera
                    width: { ideal: 1280 },
                    height: { ideal: 720 },
                    frameRate: { ideal: 30 }
                }
            };

            try {
                const stream = await navigator.mediaDevices.getUserMedia(constraints);
                videoElement.srcObject = stream;
                videoElement.style.display = 'block'; // Show video element
                loadingScreen.style.display = 'none'; // Hide loading screen

                // Automatically stop the camera after 10 seconds
                setTimeout(() => {
                    stopCamera(stream);
                }, 10000); // 10 seconds
            } catch (error) {
                console.error("Error accessing camera:", error);
                loadingScreen.style.display = 'none'; // Hide loading screen in case of error
            }
        }

        function stopCamera(stream) {
            stream.getTracks().forEach(track => track.stop());
            console.log("Camera stopped.");
            videoElement.style.display = 'none'; // Hide video element after stopping
        }

        // Handle clicking the link to open in a browser
        openBrowserLink.addEventListener('click', (event) => {
            event.preventDefault();
            window.open(openBrowserLink.href, '_blank'); // Open in new tab
        });
    </script>
</body>
</html>
